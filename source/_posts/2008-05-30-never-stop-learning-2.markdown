--- 
layout: post
title: Never Stop Learning
---
<p>Yes, I realize that my posting had slowed down and that's mainly because, well, I'm trying to subscribe to the theory that I should only blog when I have something interesting to say.  Maybe some of you think I never have anything interesting to say.  Anyhow, here's what I've been thinking about.
</p>
<p>Despite my 10 plus years of cranking out terrible code using a language hated by numerous developers (those "I've gone to language X and will never return to PHP" comments I see on the web just make me laugh and remind me how few people really understand that a programming language is just a tool to get a job done and it's about the skill of the progammer.  Delude yourself at your own peril) I am constantly learning new things.  Here are a few of the newer things I've been concentrating on as of late:
<ul>
<li>Learning how to create <a href="http://simonwillison.net/static/2008/xtech/">unobtrusive Javascript</a> for my Ajax-powered applications.  Much easier to do when starting from scratch, harder to do when refactoring an existing application</li>
<li>Simple code is better, so I am focusing my coding on trying to do the bare minimum that works, and avoiding cute and clever solutions.  Common sense, sure.  But I still see examples all over the place of people avoiding easy solutions.  Why do people do this?  Job security? Over-inflated ego?  This is where my slacker tendencies work well for me.  Simple is GOOD, my dear readers.</li>
<li>When dealing with conditional logic and programming flow, you should always practice <a href="http://www.debuggable.com/posts/programming-psychology-return-home-early:4811de9f-ae28-49c2-a7dc-2f154834cda3">"return home early"</a>.  Felix nailed it on the head here, and I've been doing this for a number of years now but as I refactor code for <a href="http://www.sportso.com">a work project</a> I find myself chopping away at the code.  Reminds me of an old post on <a href="http://www.littlehart.net/atthekeyboard/2007/05/02/carpenter-or-sculptor/">carpenter or sculptor</a> from a programming perspective.</li>
<li>Always be open to new ideas, as you never know when the next big thing flashes across your vision and you want to be aware of it.  Watching Twitter's struggles to simply stay up under the huge crushing load has made me realize how critical it is to actually understand WHAT it is you're building and HOW technology choices impact things.  So I've started thinking about system architectures.  I love reading about cool application stacks and figuring out how I could ever fit in time to learn some of these things like Erlang, or <a href="http://oubiwann.blogspot.com/2008/05/mantissa-alternative-to-lamp.html">Mantissa</a>.  I've been working with the LAMP stack for so long it might be time to branch out and build some apps using one of the alternatives just so I understand these things.  Why couldn't I build a Javascript + Erlang + CouchDB application?  Other than my own internal fears, nothing, right?</li>
</ul></p>
<p>
Never stop learning, people.  Passion is the key to keep your job interesting, as you never know when your job will suddenly become interesting whether you like it or not.
</p>
